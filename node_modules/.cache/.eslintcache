[{"D:\\myCode\\todos-react\\src\\index.js":"1","D:\\myCode\\todos-react\\src\\App.js":"2","D:\\myCode\\todos-react\\src\\style\\index.js":"3"},{"size":183,"mtime":1615356288000,"results":"4","hashOfConfig":"5"},{"size":5988,"mtime":1615643442061,"results":"6","hashOfConfig":"5"},{"size":1186,"mtime":1615644019757,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ugk01n",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\myCode\\todos-react\\src\\index.js",[],"D:\\myCode\\todos-react\\src\\App.js",["14"],"D:\\myCode\\todos-react\\src\\style\\index.js",[],{"ruleId":"15","severity":1,"message":"16","line":39,"column":13,"nodeType":"17","endLine":44,"endColumn":6},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression"]